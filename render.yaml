# ===========================================
# Исправленный Render.com Blueprint
# Только Web Service (PostgreSQL создается отдельно)
# ===========================================

services:
  # ==================== ОСНОВНОЕ ПРИЛОЖЕНИЕ ====================
  - type: web
    name: telegram-bot-web
    env: docker
    dockerfilePath: ./Dockerfile
    plan: free
    region: oregon
    healthCheckPath: /health
    
    # Переменные окружения
    envVars:
      - key: ENVIRONMENT
        value: production
      
      - key: BOT_TOKEN
        sync: false  # Устанавливается вручную через UI
        
      - key: TARGET_CHAT_ID
        sync: false  # Устанавливается вручную
        
      - key: MODERATION_CHAT_ID
        sync: false  # Опционально
        
      - key: GROUP_LINK
        value: https://t.me/your_group
        
      - key: EXAMPLE_URL
        value: https://example.com
        
      - key: WEBHOOK_HOST
        fromService:
          type: web
          name: telegram-bot-web
          property: host
          
      - key: PORT
        value: "8080"
        
      - key: DATABASE_URL
        sync: false  # Устанавливается вручную после создания PostgreSQL
    
    # Автодеплой из GitHub
    autoDeploy: true

# ===========================================
# ИНСТРУКЦИЯ ПО СОЗДАНИЮ POSTGRESQL
# ===========================================
# 
# PostgreSQL нужно создать отдельно через Render UI:
# 
# 1. Зайдите в Render Dashboard
# 2. Нажмите "New +" → "PostgreSQL"
# 3. Настройки:
#    - Name: telegram-bot-db
#    - Database Name: telegram_bot  
#    - Plan: Free
#    - Region: Oregon (US West)
# 4. После создания скопируйте External Database URL
# 5. Добавьте его в переменную DATABASE_URL веб-сервиса
# 
# ===========================================
