import os
from pyrogram import Client, filters
from pyrogram.types import Message, ChatPermissions

# User Account (не бот!)
API_ID = int(os.getenv('API_ID'))
API_HASH = os.getenv('API_HASH')
PHONE = os.getenv('PHONE_NUMBER')  # Ваш номер телефона

# Клиент как обычный пользователь
app = Client("user_account", api_id=API_ID, api_hash=API_HASH, phone_number=PHONE)

restricted = ChatPermissions(can_send_messages=False)
unrestricted = ChatPermissions(can_send_messages=True)

async def count_user_messages(chat_id, user_id):
    """Считаем сообщения пользователя"""
    count = 0
    async for message in app.get_chat_history(chat_id):
        if message.from_user and message.from_user.id == user_id:
            count += 1
        if count >= 10:  # Лимит для производительности
            break
    return count

@app.on_message(filters.group & filters.text)
async def handle_message(client, message: Message):
    """Новое сообщение"""
    user_id = message.from_user.id
    chat_id = message.chat.id
    
    count = await count_user_messages(chat_id, user_id)
    
    if count >= 4:
        await app.restrict_chat_member(chat_id, user_id, restricted)
        print(f"🚫 Restricted {user_id} ({count} messages)")

@app.on_deleted_messages()
async def handle_deleted(client, messages):
    """Удаленные сообщения"""
    for message in messages:
        if message.from_user:
            user_id = message.from_user.id
            chat_id = message.chat.id
            
            count = await count_user_messages(chat_id, user_id)
            
            if count < 4:
                await app.restrict_chat_member(chat_id, user_id, unrestricted)
                print(f"✅ Unrestricted {user_id} ({count} messages)")

if __name__ == "__main__":
    app.run()
